$(document).ready(function () {
    var threshold = 50;
    var targetPhoto = null;
    var targetPhotoId = null;
    var lastTargetPhotoId = null;


    var mouseBeforePopupShowX = 0;
    var mouseBeforePopupShowY = 0;

    var scrollY = 0;

    var zoomMode = false;
    var zoomedImage = null;
    var selectedGrid = -1;
    var lastSelectedGrid = -1;

    var preloadedSets = [];


    var transitionImageDiv = null;
    var selectedImageToZoom = null;
    var selectedImageToZoomParentContainer = null;
    var isBrowsePopupShown = false;

    var globalMouseX = 0;
    var globalMouseY = 0;

    var texturePreviewPopupHtml = function () {
        return '<div class="preview" id="browse-preview">' +
            '<div class="tcurve"></div>' +
            '<div class="preview-cont clearfix">' +
            '<div class="large largefull largefulltext">' +
            '<p class="clearfix">' +
            '<span class="photo-title">Photo Set Title Here</span>' +
            '<a href="#" class="photo-count">24 Photos</a>' +
            '</p>' +
            '</div>' +
            '</div>' +
            '<div class="bcurve"></div>' +
            '</div>';
    };

    $(window).resize(function () {
        hideZoomHint();
    });

    function initializeTransitionImage() {
        transitionImageDiv = $('<div class="transition_background transition_background_override transition-image-div"/>');
        transitionImageDiv.css('cursor', 'default');

        transitionImageDiv.unbind('mouseenter');
        transitionImageDiv.mouseenter(function (e) {
            var containerParent = $(this).parent();
            selectedImageToZoom = containerParent.find('.clickable-box');
            selectedImageToZoomParentContainer = containerParent;
        });

        transitionImageDiv.unbind('mouseleave');
        transitionImageDiv.mouseleave(function (e) {
            selectedImageToZoom = null;
            selectedImageToZoomParentContainer = null;
        });

        var zoomIconLink = $('<a href="javascript:;" />');
        var zoomIconImage = $('<img src="/images/preview_icon.png" />');

        zoomIconImage.unbind('click');
        zoomIconImage.click(function (e) {
            if (isBrowsePopupShown === true) {
                hideBrowsePopup();
            }
            else {
                mouseBeforePopupShowX = e.pageX;
                mouseBeforePopupShowY = e.pageY;
                showBrowsePopup(mouseBeforePopupShowX, mouseBeforePopupShowY);
            }
            e.stopPropagation();
        });


        zoomIconImage.css('z-index', 60);
        zoomIconImage.css('bottom', 0);
        zoomIconImage.css('right', 0);
        zoomIconImage.css('position', 'absolute');
        zoomIconImage.css('cursor', 'pointer');

        transitionImageDiv.append(zoomIconImage);

        var reportIssueImage = $('<img src="/images/preview_icon_report_issue.png" />');

        reportIssueImage.unbind('click');
        reportIssueImage.click(function (e) {
            e.stopPropagation();
            obj = JSON.parse(PhotoDataJSON);
            var assetName = obj[targetPhotoId]['name'];
            window.location = '/contact?assetName=' + assetName;
        });

        reportIssueImage.css('z-index', 60);
        reportIssueImage.css('top', "3px");
        reportIssueImage.css('left', "3px");
        reportIssueImage.css('position', 'absolute');
        reportIssueImage.css('cursor', 'pointer');

        transitionImageDiv.append(reportIssueImage);

    };

    function initializeZoom() {
        // initialize zoom
        $(window).keydown(function (e) {
            if (e.keyCode == 90) {
                if (self.zoomMode === false) {
                    self.zoomIn();
                }
            }
        }).keyup(function (e) {
            if (e.keyCode == 90) {
                if (self.zoomMode === true) {
                    self.zoomOut();
                }
            }
        });
    };

    function mouseWithin(selector, selectorParent) {
        // Since the selectorParent is relative in this case
        // So we need to recalculate top-left of the image
        var posSelector = selector.position();
        var posSelectorParent = selectorParent.position();

        var top = posSelector.top + posSelectorParent.top;
        var left = posSelector.left + posSelectorParent.left;

        var height = selector.height();
        var width = selector.width();

        top += ((selectorParent.height() - height) / 2);

        if (globalMouseX >= left && globalMouseY >= top && globalMouseX <= left + width
            && globalMouseY <= top + height) {
            return true;
        }
        return false;
    };

    function initGlobalMouseEvents() {
        var doc = $(document);
        doc.unbind('mousemove');
        doc.bind('mousemove', function (e) {
            globalMouseX = e.pageX;
            globalMouseY = e.pageY;

            selectedGrid = -1;

            if (selectedImageToZoom && selectedImageToZoomParentContainer) {

                if (mouseWithin(selectedImageToZoom, selectedImageToZoomParentContainer)) {
                    // calculate for the selected grid
                    var me = selectedImageToZoom;
                    var offset = me.offset();
                    var localX = globalMouseX - offset.left;
                    var localY = globalMouseY - offset.top;


                    var column = Math.round(localX / (me.width() / 4));
                    var row = Math.round(localY / (me.height() / 4 ));
                    var grid = column + (row * 5);

                    selectedGrid = grid;


                    if (lastSelectedGrid !== selectedGrid && zoomMode === true) {
                        // if grid has changed force image to update on zoomed preview
                        zoomIn();
                    }

                    lastSelectedGrid = selectedGrid;
                }
            }
        });
    };

    function showZoomHint(target) {
        var offsetLeft = target.offset().left;
        var offsetTop = target.offset().top;

        var gradientHeight = target.height();
        var removedGradientHeight = target.height() - gradientHeight;

        offsetTop += removedGradientHeight;

        transitionImageDiv.css('width', target.width() + 1);
        transitionImageDiv.css('z-index', 55);
        transitionImageDiv.css('height', gradientHeight + 2);
        transitionImageDiv.css('left', offsetLeft);
        transitionImageDiv.css('top', offsetTop);
        transitionImageDiv.css('opacity', 0.75);
        transitionImageDiv.css('transition', 'opacity 0.3s ease 0s');


        target.append(transitionImageDiv);
        transitionImageDiv.fadeIn(100);

    };

    self.hideZoomHint = function (target) {
        transitionImageDiv.hide();
    }

    function hideBrowsePopup() {
        clearHideBrowsePopupTimeout();
        lastTargetPhotoId = null;

        hideTimeout = setTimeout(function () {
            executeHideBrowsePopup();
            // }, 100);
        }, 0);
    };

    function clearHideBrowsePopupTimeout() {
        if (typeof hideTimeout !== 'undefined') {
            clearTimeout(hideTimeout);
            hideTimeout = null;
        }
    };

    // function showBrowsePopup(x, y) {
    function showBrowsePopup(x, y) {

        clearHideBrowsePopupTimeout();
        isBrowsePopupShown = true;

        // clearBrowsePopup();

        // selectedPhotoId = photoId;
        // selectedPhotoSetId = photoSetId;

        var centerX = x + 20;
        var centerY = y + 20;

        adjustBrowsePopupPosition(centerX, centerY);

        if (typeof xhr !== 'undefined') {
            if (xhr && xhr.readyState != 4) {
                xhr.abort();
            }
        }

        if (targetPhotoId != lastTargetPhotoId) {

            centerBrowsePopupLoader();

            showBrowsePopupLoader();
            updateBrowsePopupData();
        }

        lastTargetPhotoId = targetPhotoId;

    };

    function fitToContainer(containerWidth, containerHeight, inputWidth, inputHeight) {
        var reductionPercentage = 0;

        var ratio = 0;
        var reducedWidth = inputWidth;
        var reducedHeight = inputHeight;

        var ratio = Math.min(containerWidth / inputWidth, containerHeight / inputHeight);

        var reducedWidth = inputWidth * ratio;
        var reducedHeight = inputHeight * ratio;
        var top = Math.abs(containerHeight - reducedHeight) / 2;

        var out = {
            reductionPercentage: ratio,
            reducedWidth: reducedWidth,
            reducedHeight: reducedHeight,
            top: top
        };

        //console.log("container width = " + containerWidth);
        //console.log("container height = " + containerHeight);
        //console.log("input width = " + inputWidth);
        //console.log("input height = " + inputHeight);
        //console.log(out);

        return out;
    };

    function updateBrowsePopupData() {

        if (zoomMode == true) {
            zoomIn();
            return;
        }

        obj = JSON.parse(PhotoDataJSON);
        // Set initial hover image (the one used in the page)
        hoverImage = obj[targetPhotoId]['image'];
        // console.log('Initial image: ' + hoverImage);

        var selectedMember = null;

        if (targetPhotoId) {
            self.xhr = $.ajax({
                url: "/browse/getPhotoInfoAjax?id=" + targetPhotoId,
                dataType: "json",
                cache: true
            }).done(function (response) {
                var photoImage = null;
                if (targetPhotoId == response.selectedPhotoId) {
                    if (response.members.length > 0) {
                        for (var key in response.members) {
                            obj = response.members[key];
                            if (obj.id == targetPhotoId) {
                                photoImageObj = obj.images;
                                // Overwrite hover image w/ high resolution image
                                hoverImage = photoImageObj.medium;

                                selectedMember = response.members[key];
                                // console.log('Medium image (overwrite previous value): ' + hoverImage);
                                break;
                            } // End if statement
                        } // End for loop
                    } // End if statement
                } // End if statement

                // console.log('Showing image: ' + hoverImage);
                var largeImage = $('<img src="' + hoverImage + '" />');

                if(selectedMember != null) {
                    var largeDimensionReduced = fitToContainer(764, 384, selectedMember.width, selectedMember.height);

                    //console.log(selectedMember);

                    largeImage.css('width', largeDimensionReduced['reducedWidth']);
                    largeImage.css('height', largeDimensionReduced['reducedHeight']);
                    largeImage.css('margin-top', largeDimensionReduced['top'] - 10);


                    hideBrowsePopupLoader();

                    clearBrowsePopup();
                    largeImageContainer.prepend(largeImage);
                }
            });
        }

        titleLabel.html(obj[targetPhotoId]['name']);
        photoCountLabel.html("hold 'z' to zoom");

    }

    function clearBrowsePopup() {
        largeImageContainer.find('img').remove();
    };

    function showBrowsePopupLoader() {
        browsePopupLoader.show();
    };

    function hideBrowsePopupLoader() {
        browsePopupLoader.hide();
    };

    function centerBrowsePopupLoader() {
        // set the position of loader
        var loaderX = (largeImageContainer.width() / 2) - (browsePopupLoader.width() / 2);
        var loaderY = (largeImageContainer.height() / 2) - (browsePopupLoader.height() / 2);

        browsePopupLoader.css("left", loaderX);
        browsePopupLoader.css("top", loaderY);
    }

    function preload(arrayOfImages) {
        $(arrayOfImages).each(function () {
            $('<img/>')[0].src = this;
            // Alternatively you could use:
            // (new Image()).src = this;
        });
    }

    function executeHideBrowsePopup() {
        // selectedPhotoId = null;

        clearBrowsePopup();

        browsePopupContainer.hide();
        isBrowsePopupShown = false;
    };

    var doc = $(document);

    $('body').append(texturePreviewPopupHtml());

    browsePopupContainer = $('#browse-preview');
    // browsePopupLoader = $('<div id="browse-popup-loader">Loading...</div>');
    browsePopupLoader = $('<div id="browse-popup-loader"></div>');

    var largeImageContainer = browsePopupContainer.find(".preview-cont > .large");
    // var largeImageContainer = largeImageContainer;

    largeImageContainer.append(browsePopupLoader);

    titleLabel = largeImageContainer.find("p > .photo-title");
    photoCountLabel = largeImageContainer.find("p > .photo-count");

    // browsePopupContainer.show();

    $(window).scroll(function (e) {
        scrollY = doc.scrollTop();
    });

    function moveBrowsePopup(x, y, doNotShow) {
        var centerX = x + 20;
        var centerY = y + 20;

        adjustBrowsePopupPosition(centerX, centerY, doNotShow);
    };

    function adjustBrowsePopupPosition(centerX, centerY, doNotShow) {
        var documentWidth = $(window).width();
        var documentHeight = $(window).height() + scrollY;


        var xPercentage = percentageOnScreenWidth(centerX);

        if (xPercentage < 50) {
            //var right = centerX + browsePopupContainer.width();
            //
            //if (right > documentWidth) {
            //    var diff = Math.abs(right - documentWidth);
            //    centerX -= diff;
            //}
        }
        else {
            centerX -= (browsePopupContainer.width() + 40);
        }

        var bottom = centerY + browsePopupContainer.height();
        if (bottom > documentHeight) {
            var diff = Math.abs(bottom - documentHeight);
            centerY -= (diff);
        }

        //if (centerX <= 0) {
        //    centerX = 10;
        //}

        browsePopupContainer.css('top', centerY);
        browsePopupContainer.css('left', centerX);

        if (!(doNotShow === true)) {
            browsePopupContainer.show();
        }

    };

    function percentageOnScreenWidth(centerX) {
        var winWidth = $(window).width();
        var percentageX = (centerX / winWidth) * 100;
        return percentageX;
    };


    var imagesDiv = $('.download_images > .image > .img');

    imagesDiv.mouseenter(function (e) {
        var target = $(this);
        var img = target.find('.clickable-box');
        //var id = img.attr('id').replace('photoid-', ''); // photo ID
        var id = img.attr('id').replace('dl-image-', ''); // photo ID

        targetPhoto = target;
        targetPhotoId = id;

        showZoomHint(target);
    });

    imagesDiv.mouseleave(function (e) {
        if (typeof mouseStopTimeout !== 'undefined') {
            clearTimeout(mouseStopTimeout);
            mouseStopTimeout = null;
        }

        targetPhoto = null;
        targetPhotoId = null;

        hideBrowsePopup();

        hideZoomHint($(this));
    });


    imagesDiv.mousemove(function (e) {
        if (typeof mouseStopTimeout !== 'undefined') {
            clearTimeout(mouseStopTimeout);
            mouseStopTimeout = null;
        }

        moveBrowsePopup(e.pageX, e.pageY, true);

        mouseStopTimeout = setTimeout(function () {
            mouseBeforePopupShowX = e.pageX;
            mouseBeforePopupShowY = e.pageY;
        }, 500);
    });

    function getImageHoverGridPosition(obj, e) {
        var me = obj;
        var parentOffset = me.offset();
        var relX = e.pageX - parentOffset.left;
        var relY = e.pageY - parentOffset.top;

        var column = Math.round(relX / (me.width() / 4));
        var row = Math.round(relY / (me.height() / 4 ));
        var grid = column + (row * 5);

        return grid;
    }

    // initialize zoom
    $(window).keydown(function (e) {
        if (e.keyCode == 90) {
            if (zoomMode === false) {
                zoomIn();
            }
        }
    }).keyup(function (e) {
        if (e.keyCode == 90) {
            if (zoomMode === true) {
                zoomOut();
            }
        }
    });

    function updateZoomStatus() {
        if (zoomMode === false) {
            photoCountLabel.html("hold 'z' to zoom");
        }
    }

    function preloadImages(arrayOfImages) {
        $(arrayOfImages).each(function () {
            $('<img />').attr('src', this).appendTo('body').css('display', 'none');
        });
    }

    function zoomIn() {
        zoomMode = true;
        updateZoomStatus();

        if (selectedGrid < 0) {
            return;
        }

        obj = JSON.parse(PhotoDataJSON);

        // var zoomedImage = self.browsePopupFirstPhotoImageData.zoomedPreviewPrefixUrl + self.selectedGrid + ".jpg";
        var zoomedImage = obj[targetPhotoId]['zoomedPreviewPrefixUrl'] + selectedGrid + ".jpg";
        var zImage = $('<img src="' + zoomedImage + '" />');

        // Preload grid images
        var paths = [];
        for (var i = 0; i < 25; i++) {
            paths.push(obj[targetPhotoId]['zoomedPreviewPrefixUrl'] + i + ".jpg");
        }

        clearBrowsePopup();
        largeImageContainer.append(browsePopupLoader);

        centerBrowsePopupLoader();

        // browsePopupLoader.show();
        showBrowsePopupLoader();
        largeImageContainer.prepend(zImage);

        zImage.load(function () {
            hideBrowsePopupLoader();
        });


    }

    function zoomOut() {
        zoomMode = false;
        updateZoomStatus();
        // console.log('Zoom OUT');

        updateBrowsePopupData();
    }

    // browsePopupContainer.show();

    preload([
        '/images/bg-preview.png',
        '/images/curve-preview.png',
        '/images/curve-preview.png',
        '/images/bg-transblue.png',
        '/images/preview_icon.png',
        '/images/preview_icon_report_issue.png'
    ]);


    initializeZoom();

    initializeTransitionImage();

    initGlobalMouseEvents()


});
